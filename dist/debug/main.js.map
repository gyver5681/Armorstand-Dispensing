{"version":3,"sources":["../../scripts/main.ts"],"sourcesContent":["import {\n  world,\n  system,\n  EntityRemoveBeforeEvent,\n  EntitySpawnAfterEvent,\n  EntityItemComponent,\n  EntityComponentTypes,\n  Vector2,\n  Vector3,\n} from \"@minecraft/server\";\n\n// Velocity Bounds Constants. These were determined via running and logging 18 stacks of armor stands through dispensers in various orientations to get an approximate max and min velocity for each orientation.\nconst Bounds = {\n  north: {\n    min: { x: -0.17, y: -0.03, z: 0 } as Vector3,\n    max: { x: 0.17, y: 0.35, z: 0.45 } as Vector3,\n  },\n  south: {\n    min: { x: -0.17, y: -0.03, z: -0.45 } as Vector3,\n    max: { x: 0.17, y: 0.35, z: 0 } as Vector3,\n  },\n  east: {\n    min: { x: -0.45, y: -0.03, z: -0.17 } as Vector3,\n    max: { x: 0, y: 0.35, z: 0.17 } as Vector3,\n  },\n  west: {\n    min: { x: 0, y: -0.03, z: -0.17 } as Vector3,\n    max: { x: 0.45, y: 0.35, z: 0.17 } as Vector3,\n  },\n  above: {\n    min: { x: -0.19, y: 0, z: -0.19 } as Vector3,\n    max: { x: 0.19, y: 0.27, z: 0.19 } as Vector3,\n  },\n  below: {\n    min: { x: 0, y: 0, z: 0 } as Vector3,\n    max: { x: 0, y: 0, z: 0 } as Vector3,\n  },\n};\n\nfunction v3CheckBounds(bounds: { min: Vector3; max: Vector3 }, velocity: Vector3): boolean {\n  return (\n    bounds.min.x < velocity.x &&\n    velocity.x < bounds.max.x &&\n    bounds.min.y < velocity.y &&\n    velocity.y < bounds.max.y &&\n    bounds.min.z < velocity.z &&\n    velocity.z < bounds.max.z\n  );\n}\n\nfunction GetArmorstandBlocks(): Vector3[] {\n  var returnArg: Vector3[] = [];\n  const dynamicProp = world.getDynamicProperty(\"gyver_armorstand_blocks\");\n  if (dynamicProp) {\n    returnArg = JSON.parse(dynamicProp as string);\n  }\n  return returnArg;\n}\n\nfunction SetArmorstandBlocks(array: Vector3[]): void {\n  world.setDynamicProperty(\"gyver_armorstand_blocks\", JSON.stringify(array));\n}\n\nfunction AddArmorstandBlock(blockLocation: Vector3): void {\n  var inputArray = GetArmorstandBlocks();\n  inputArray.push(blockLocation);\n  SetArmorstandBlocks(inputArray);\n}\n\nfunction RemoveArmorstandBlock(testLocation: Vector3, testArray: Vector3[]): [Vector3[], boolean] {\n  var returnArg: Vector3[] = [];\n  var foundEntry: boolean = false;\n  const testlocstring = JSON.stringify(testLocation);\n  for (var loc of testArray) {\n    if (!foundEntry) {\n      if (JSON.stringify(loc) === testlocstring) {\n        foundEntry = true;\n        continue;\n      }\n    }\n    returnArg.push(loc);\n  }\n\n  return [returnArg, foundEntry];\n}\n\nworld.beforeEvents.entityRemove.subscribe((event: EntityRemoveBeforeEvent) => {\n  const eventEntity = event.removedEntity;\n  try {\n    if (eventEntity) {\n      if (eventEntity.typeId === \"minecraft:armor_stand\") {\n        const entityDimension = eventEntity.dimension;\n        const entityBlock = entityDimension.getBlock(eventEntity.getHeadLocation());\n        if (entityBlock) {\n          AddArmorstandBlock(entityBlock.location);\n        }\n      }\n    }\n  } catch (e) {\n    console.warn((e as Error).message);\n  }\n});\n\nworld.afterEvents.entitySpawn.subscribe((event: EntitySpawnAfterEvent) => {\n  let myentity = event.entity;\n  try {\n    if (myentity) {\n      const itemComp = myentity.getComponent(EntityComponentTypes.Item) as EntityItemComponent | undefined;\n      if (itemComp) {\n        if (itemComp.itemStack.typeId === \"minecraft:armor_stand\") {\n          const spawnDimension = myentity.dimension;\n          const spawnLocation = myentity.location;\n          const spawnVelocity = myentity.getVelocity();\n          var dispensedStand: boolean = false;\n          var testDispenser: boolean = true;\n          var StandRotation: Vector2 = { x: 0, y: 270 };\n          const spawnBlock = spawnDimension.getBlock(spawnLocation);\n          if (spawnBlock) {\n            var destroyedBlocks = GetArmorstandBlocks();\n            if (destroyedBlocks.length > 0) {\n              var [removedBlocks, foundEntry] = RemoveArmorstandBlock(spawnBlock.location, destroyedBlocks);\n              if (foundEntry) {\n                SetArmorstandBlocks(removedBlocks);\n                testDispenser = false;\n              }\n            }\n            if (testDispenser) {\n              if (!dispensedStand) {\n                const testBlock = spawnBlock.north(1);\n                if (\n                  testBlock &&\n                  testBlock.matches(\"minecraft:dispenser\", { facing_direction: 3 }) &&\n                  v3CheckBounds(Bounds.north, spawnVelocity)\n                ) {\n                  dispensedStand = true;\n                  StandRotation.y = 0;\n                }\n              }\n              if (!dispensedStand) {\n                const testBlock = spawnBlock.south(1);\n                if (\n                  testBlock &&\n                  testBlock.matches(\"minecraft:dispenser\", { facing_direction: 2 }) &&\n                  v3CheckBounds(Bounds.south, spawnVelocity)\n                ) {\n                  dispensedStand = true;\n                  StandRotation.y = 180;\n                }\n              }\n              if (!dispensedStand) {\n                const testBlock = spawnBlock.east(1);\n                if (\n                  testBlock &&\n                  testBlock.matches(\"minecraft:dispenser\", { facing_direction: 4 }) &&\n                  v3CheckBounds(Bounds.east, spawnVelocity)\n                ) {\n                  dispensedStand = true;\n                  StandRotation.y = 90;\n                }\n              }\n              if (!dispensedStand) {\n                const testBlock = spawnBlock.west(1);\n                if (\n                  testBlock &&\n                  testBlock.matches(\"minecraft:dispenser\", { facing_direction: 5 }) &&\n                  v3CheckBounds(Bounds.west, spawnVelocity)\n                ) {\n                  dispensedStand = true;\n                }\n              }\n              if (!dispensedStand) {\n                const testBlock = spawnBlock.above(1);\n                if (\n                  testBlock &&\n                  testBlock.matches(\"minecraft:dispenser\", { facing_direction: 0 }) &&\n                  v3CheckBounds(Bounds.above, spawnVelocity)\n                ) {\n                  dispensedStand = true;\n                }\n              }\n              if (!dispensedStand) {\n                const testBlock = spawnBlock.below(1);\n                if (\n                  testBlock &&\n                  testBlock.matches(\"minecraft:dispenser\", { facing_direction: 1 }) &&\n                  spawnVelocity.x === 0 &&\n                  spawnVelocity.y === 0 &&\n                  spawnVelocity.z === 0\n                ) {\n                  dispensedStand = true;\n                }\n              }\n            }\n          }\n          if (dispensedStand) {\n            spawnDimension.spawnEntity(\"minecraft:armor_stand\", spawnLocation).setRotation(StandRotation);\n            myentity.kill();\n          }\n        }\n      }\n    }\n  } catch (e) {\n    console.warn((e as Error).message);\n  }\n});\n\n// Clear the Armorstand destroyed Blocks list every two seconds.\nsystem.runInterval(() => {\n  SetArmorstandBlocks([]);\n}, 40);\n"],"mappings":"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","names":[],"file":"../scripts/main.js"}